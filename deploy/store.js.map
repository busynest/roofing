{"version":3,"file":"store.js","sourceRoot":"","sources":["../src/store.ts"],"names":[],"mappings":"AAQA,OAAO,EAAW,eAAe,EAAE,MAAoB,OAAO,CAAC;AAC/D,OAAO,EAAE,cAAc,EAAE,MAA8B,kBAAkB,CAAC;AAC1E,OAAO,KAA0B,MAAsB,aAAa,CAAC;AACrE,OAAO,EAAE,mBAAmB,EAAE,MAAyB,mCAAmC,CAAC;AAE3F,OAAO,EAAE,GAAG,EAAuB,MAAoB,iBAAiB,CAAC;AASzE,MAAM,CAAC,MAAM,KAAK,GAAG,cAAc,CAAC;IAClC,OAAO,EAAG;QACR,GAAG;KACJ;IACD,UAAU,EAAE,CAAC,oBAAoB,EAAE,EAAE,CAAC,oBAAoB,EAAE,CAAC,MAAM,CAAC,KAAgD,CAAC;IACrH,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,YAAY;IAC9C,SAAS,EAAE,CAAC,mBAAmB,CAAC,eAAe,CAAC,CAAC;CAClD,CAAC,CAAA","sourcesContent":["\r\ndeclare global {\r\n  interface Window {\r\n    process?: Object;\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nimport { compose, combineReducers }               from 'redux';\r\nimport { configureStore }                         from '@reduxjs/toolkit';\r\nimport thunk, { ThunkMiddleware }                 from 'redux-thunk';\r\nimport { lazyReducerEnhancer }                    from 'pwa-helpers/lazy-reducer-enhancer';\r\n\r\nimport { app, appAction, AppState }               from './redux-general';\r\n\r\nexport interface RootState {\r\n  app?:AppState;\r\n}\r\n\r\n// Merge Typescript Factory\r\nexport type RootAction = appAction ;\r\n\r\nexport const store = configureStore({\r\n  reducer : {\r\n    app\r\n  },\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(thunk as ThunkMiddleware <RootState, RootAction>),\r\n  devTools: process.env.NODE_ENV == 'production',\r\n  enhancers: [lazyReducerEnhancer(combineReducers)],\r\n})\r\n\r\n"]}